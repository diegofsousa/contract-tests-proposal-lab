# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Project cicd flow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean install

  local-contract-tests:

      runs-on: ubuntu-latest

      strategy:
        matrix:
          node-version: [ 18.x ]

      steps:
        - uses: actions/checkout@v3
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}
        - name: Run schema tests
          run: |
            cd schema_tests/tests/
            npm install
            node index.js

  validate-external-contract-tests:
      needs: [build, local-contract-tests]
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3
        - name: Read schemas.json
          id: package
          uses: juliangruber/read-file-action@v1
          with:
            path: ./schema_tests/schemas.json
        - name: Echo schemas.json
          run: echo "${{ steps.package.outputs.content }}"
        - name: External contract validate
          id: request-to-lambda
          uses: fjogeleit/http-request-action@v1
          with:
            url: 'https://8vip765q9k.execute-api.sa-east-1.amazonaws.com/default/basicLambda'
            method: 'POST'
            customHeaders: '{"Content-Type": "application/json"}'
            data: "${{ steps.package.outputs.content }}"
        - name: Show Response
          run: |
            echo ${{ steps.request-to-lambda.outputs.response }}
        - name: Check result fail
          if: ${{ fromJson(steps.request-to-lambda.outputs.response).status }} == "FAILED"
          with:
            script: |
              core.setFailed('[FAIL] Some schemas test fail')

        - name: Check result warning
          if: ${{ fromJson(steps.request-to-lambda.outputs.response).status }} == "WARNING"
          with:
            script: |
              core.warning('[WARNING] There are test cases that were not found in other repositories');

